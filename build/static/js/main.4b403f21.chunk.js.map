{"version":3,"sources":["containers/Home.js","FirebaseConfig.js","containers/Login.js","containers/SignUp.js","containers/admin/admin.js","routes.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Home","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","Login","useState","email","setEmail","password","setPassword","error","setError","location","useLocation","auth","history","useHistory","event","a","preventDefault","signInWithEmailAndPassword","pathname","push","console","log","message","style","display","alignItems","justifyContent","height","Card","width","CardContent","CardHeader","color","title","flexDirection","onSubmit","TextField","id","value","onChange","e","target","variant","label","margin","autoComplete","type","Alert","severity","fontSize","Button","SignUp","name","setName","phone","setPhone","cPassword","setCpassword","authCode","setAuthCode","typeValue","setTypeValue","db","database","firestoreDB","firestore","ref","child","once","then","dataSnapshot","forEach","childSnapshot","key","val","createUserWithEmailAndPassword","onAuthStateChanged","user","docRef","collection","doc","uid","userData","set","remove","companyId","childValues","get","exists","marginTop","RadioGroup","row","aria-label","FormControlLabel","control","Radio","Admin","userEmail","setUserEmail","Firebase","data","disabled","onClick","rand","Math","floor","random","update","Routes","exact","path","App","userAuthenticated","setUserAutenticated","locationMatch","setLocationMatch","homeloc","setHomeloc","signOut","useEffect","onLoad","buttons","to","component","Link","AppBar","position","backgroundColor","Toolbar","IconButton","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.4b403f21.chunk.js","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport 'firebase/auth'\r\n\r\nexport default function Home() {\r\n    return (\r\n    <div>\r\n         Welcome to Home\r\n    </div>\r\n    )\r\n}","import firebase from 'firebase/app'\r\nimport React from 'react'\r\nconst fireConfig = {\r\n        apiKey: \"AIzaSyBNNxfF9iveJTKICgukGUwxCsO8cmtLKQE\",\r\n        authDomain: \"kumos-f4d9a.firebaseapp.com\",\r\n        databaseURL: \"https://kumos-f4d9a.firebaseio.com\",\r\n        projectId: \"kumos-f4d9a\",\r\n        storageBucket: \"kumos-f4d9a.appspot.com\",\r\n        messagingSenderId: \"1044651688607\",\r\n        appId: \"1:1044651688607:web:639eb44d36faf9773e98aa\",\r\n        measurementId: \"G-75LT4EWR1Z\"\r\n    }\r\nconst app = firebase.initializeApp(fireConfig);\r\nexport default !firebase.apps.length ? app : firebase.app();","import React, { useState } from \"react\";\r\nimport 'firebase/auth'\r\nimport Card from '@material-ui/core/Card';\r\nimport { Button, CardContent, CardHeader, TextField } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport app from '../FirebaseConfig'\r\nimport { useHistory, useLocation} from 'react-router-dom'\r\nimport './SignUp.css'\r\n\r\nexport default function Login() {\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[error, setError] = useState(\"\");\r\n    const location = useLocation();\r\n    var auth = app.auth();\r\n    const history = useHistory();\r\n    async function handleLogin(event) {\r\n        event.preventDefault();\r\n        setError(\"\")\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email,password);\r\n            (location.pathname === \"/admin/login\") ? history.push(\"/admin\") : history.push(\"/\");\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            if (e.message === \"The email address is already in use by another account.\") { setError(\"email already in use.\");}\r\n        }\r\n    }\r\n    return (\r\n        <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\", height:\"80vh\"}}>\r\n            <Card style={{display: \"flex\", width:\"fit-content\"}}>\r\n                <CardContent>\r\n                <CardHeader color=\"black\" title=\"Log In\"></CardHeader>\r\n                <form style={{display:\"flex\", flexDirection:\"column\"}} onSubmit={handleLogin}>\r\n                    <TextField id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} variant=\"outlined\" label=\"Email\" style={{margin:\"10px\"}} autoComplete=\"off\"></TextField>\r\n                    <TextField id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} variant=\"outlined\" label=\"Password\" style={{margin:\"10px\"}}></TextField>\r\n                    {error ? <Alert severity=\"error\" style={{margin:\"10px\", fontSize:\"10px\", height:\"15px\"}}>{error}</Alert> : <Alert severity=\"error\" style={{display:\"none\", margin:\"10px\"}}>Failed</Alert>}\r\n                    <Button variant=\"outlined\" type=\"submit\" style={{margin:\"10px\"}}>Log In</Button>\r\n                </form>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport 'firebase/auth'\r\nimport Card from '@material-ui/core/Card';\r\nimport { Button, CardContent, CardHeader, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField, ThemeProvider } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport app from '../FirebaseConfig'\r\nimport { useHistory} from 'react-router-dom'\r\nimport './SignUp.css'\r\nimport firebase from \"firebase/app\"\r\n\r\nexport default function SignUp() {\r\n    const[name, setName] = useState(\"\");\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[phone, setPhone] = useState(\"\");\r\n    const[error, setError] = useState(\"\");\r\n    const[cPassword, setCpassword] = useState(\"\");\r\n    const[authCode, setAuthCode] = useState(\"\");\r\n    const[typeValue, setTypeValue] = useState(\"company\");\r\n    var db = firebase.database();\r\n    var firestoreDB = firebase.firestore();\r\n    var auth = app.auth();\r\n    const history = useHistory();\r\n    async function handleSignup(event) {\r\n        event.preventDefault();\r\n        setError(\"\")        \r\n        try {\r\n            (db.ref(\"authCode\").child(typeValue).once(\"value\")).then(function(dataSnapshot) {\r\n                dataSnapshot.forEach(function(childSnapshot) {\r\n                    if (typeValue === \"technician\") {\r\n                        if (childSnapshot.key === authCode && childSnapshot.val() === email) {\r\n                            auth.createUserWithEmailAndPassword(email,password);\r\n                            auth.onAuthStateChanged(function(user){\r\n                                if(user) {\r\n                                    var docRef = firestoreDB.collection('Technicians').doc(user.uid);\r\n                                    var userData = {\"name\": name, \"email\": email, \"phone\": phone};\r\n                                    docRef.set(userData);\r\n                                    db.ref(\"authCode\").child(typeValue).child(authCode).remove();\r\n                                    history.push(\"/\");\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        var companyId = childSnapshot.key;\r\n                        childSnapshot.forEach(async function(childValues) {\r\n                            if (childValues.key === authCode && childValues.val() === email) {\r\n                                auth.createUserWithEmailAndPassword(email,password);\r\n                                await auth.onAuthStateChanged(function(user) {\r\n                                    if (user) {\r\n                                        var docRef = firestoreDB.collection('Companies').doc(companyId);\r\n                                        var userData = {\"name\": name, \"email\": email, \"phone\": phone};\r\n                                        console.log(userData)\r\n                                        docRef.get().then(function(doc) {\r\n                                            if (doc.exists) {\r\n                                                docRef.collection(\"User\").doc(user.uid).set(userData)\r\n                                            }    \r\n                                        });\r\n                                        db.ref(\"authCode\").child(typeValue).child(companyId).child(authCode).remove();\r\n                                        history.push(\"/\");\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n            if (e.message == \"The email address is already in use by another account.\") { setError(\"email already in use.\");}\r\n        }\r\n    }\r\n    const handleOption = (event) => {\r\n        setTypeValue(event.target.value);\r\n    }\r\n    return(\r\n        <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\", marginTop:\"20px\"}}>\r\n            <Card style={{display: \"flex\", width:\"fit-content\"}}>\r\n                <CardContent>\r\n                <CardHeader color=\"black\" title=\"Sign Up\"></CardHeader>\r\n                <form style={{display:\"flex\", flexDirection:\"column\"}} onSubmit={handleSignup}>\r\n                    <TextField id=\"name\" value={name} onChange={(e) => setName(e.target.value)} variant=\"outlined\" label=\"Name\" style={{margin:\"8px\"}}></TextField>\r\n                    <TextField id=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} variant=\"outlined\" label=\"Phone\" style={{margin:\"8px\"}}></TextField>\r\n                    <TextField id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} variant=\"outlined\" label=\"Email\" style={{margin:\"8px\"}}></TextField>\r\n                    <div style={{margin:\"10px\"}}>\r\n                        <RadioGroup row aria-label=\"Type\" value={typeValue} onChange={handleOption}>\r\n                            <label style={{margin:\"20px 10px\"}}>Type</label>\r\n                            <FormControlLabel value=\"company\" control={<Radio />} label=\"Client\" style={{margin:\"8px\"}}></FormControlLabel>\r\n                            <FormControlLabel value=\"technician\" control={<Radio />} label=\"Technician\" style={{margin:\"8px\"}}></FormControlLabel>\r\n                        </RadioGroup>\r\n                    </div>\r\n                    <TextField id=\"authCode\" value={authCode} onChange={(e) => setAuthCode(e.target.value)} variant=\"outlined\" label=\"Auth Code\" style={{margin:\"10px\"}}></TextField>\r\n                    <div display=\"flex\">\r\n                        <TextField id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} variant=\"outlined\" label=\"Password\" style={{margin:\"10px\"}}></TextField>\r\n                        <TextField id=\"cPassword\" type=\"password\" value={cPassword} onChange={(e) => setCpassword(e.target.value)} variant=\"outlined\" label=\"Confirm Password\" style={{margin:\"10px\"}}></TextField>\r\n                    </div>\r\n                    {error ? <Alert severity=\"error\" style={{margin:\"10px\", fontSize:\"10px\", height:\"15px\"}}>{error}</Alert> : <Alert severity=\"error\" style={{display:\"none\", margin:\"10px\"}}>Failed</Alert>}\r\n                    <Button variant=\"outlined\" type=\"submit\" style={{margin:\"10px\"}}>Sign Up</Button>\r\n                </form>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, { Children, useEffect, useState } from 'react';\r\nimport app from \"../../FirebaseConfig\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\n// import database from \"firebase/database\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card, CardHeader, TextField } from '@material-ui/core';\r\nimport Firebase from 'firebase';\r\n\r\nexport default function Admin() {\r\n    const[userEmail, setUserEmail] = useState(\"\");\r\n    const[authCode, setAuthCode] = useState(\"\");\r\n    var db = Firebase.database().ref(\"authCode\");\r\n    var data = {};\r\n    // firebase.auth().onAuthStateChanged(function(user) {\r\n    //     if (user) \r\n    //     setUserEmail(user.email)\r\n    // })\r\n    function handelClick() {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = Math.floor(100000 + Math.random() * 900000);\r\n        setAuthCode(rand);\r\n        data[rand] = userEmail;\r\n        db.child(\"technician\").update(data);\r\n    }\r\n    return (\r\n        <div>welcome to admin {userEmail} \r\n            <Card>\r\n                <CardHeader title=\"Register a Technisian\"></CardHeader>\r\n                <TextField id=\"email\" type=\"email\" label=\"Email\" value={userEmail} onChange={(e) => {setUserEmail(e.target.value)}} variant=\"outlined\"></TextField>\r\n                <TextField id=\"authCode\" type=\"email\" label=\"Auth Code\" variant=\"outlined\" disabled value={authCode}></TextField>\r\n                <button variant=\"\" onClick={handelClick}>Generate Auth Code</button>\r\n            </Card>\r\n        </div>\r\n    )\r\n    \r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport SignUp from \"./containers/SignUp\";\r\nimport Admin from \"./containers/admin/admin\";\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n                <Login />\r\n            </Route>\r\n            <Route exact path=\"/sign_up\">\r\n                <SignUp />\r\n            </Route>\r\n            <Route exact path=\"/admin\">\r\n                <Admin />\r\n            </Route>\r\n            <Route exact path=\"/admin/login\">\r\n                <Login />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from \"./routes\";\nimport AppBar from '@material-ui/core/AppBar'\nimport { Button, IconButton, Toolbar } from '@material-ui/core';\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom'\nimport app from './FirebaseConfig'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n\nfunction App() {\n  const history = useHistory();\n  const[userAuthenticated, setUserAutenticated] = useState(\"\");\n  const [locationMatch, setLocationMatch] = useState(\"\");\n  const[homeloc, setHomeloc] = useState(\"\");\n  const location = useLocation();\n  useEffect(() => {onLoad()},[]);\n\n  async function onLoad () {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        setUserAutenticated(true);\n        // User is signed in.\n      } else {\n        setUserAutenticated(false);\n        (location.pathname === \"/admin\") ? setLocationMatch(true) : setLocationMatch(false);\n        (location.pathname === \"/\") ? setHomeloc(true) : setHomeloc(false);\n        // No user is signed in.\n      }\n    });\n  }\n  async function handleLogout() {\n    await firebase.auth().signOut();\n    setUserAutenticated(false);\n    (location.pathname === \"/admin\") ? history.push(\"/admin/login\") : history.push(\"/login\");\n  }\n  var buttons = locationMatch ? <Redirect to=\"admin/login\" />  : <div><Button color=\"inherit\" component={Link} to=\"/login\">Login</Button><Button color=\"inherit\" component={Link} to=\"/sign_up\">Sign Up</Button></div> ;\n  if (userAuthenticated !== \"\") {\n    return (\n      <div>\n      <AppBar position=\"static\" style={{color:\"black\", backgroundColor:\"white\", alignItems:\"flex-end\"}}>\n        <Toolbar>\n          <IconButton></IconButton>\n          {userAuthenticated ? <div><Button color=\"inherit\" onClick={handleLogout}>Log Out</Button></div>\n          : buttons\n        }  \n        </Toolbar>\n      </AppBar>\n      {homeloc ? <Redirect to=\"/login\" /> : <div></div>}\n      <div></div>\n      <Routes />\n      </div>\n    )\n  } else {\n    return (\n      <div></div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}